# .github/workflows/ci.yml

name: CI Pipeline

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      ENVIRONMENT: development  # Set this to 'production' or 'development'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose -v

    - name: Set execute permissions for Docker Compose scripts
      run: |
        chmod +x ./scripts/docker-compose-up.sh
        chmod +x ./scripts/docker-compose-down.sh

    - name: Run Docker Compose Up Script
      run: ./scripts/docker-compose-up.sh

    - name: Wait for services to be ready
      run: |
        docker-compose exec -T inventory-service bash -c 'until pg_isready -h inventory-db -U postgres; do sleep 1; done'
    
    - name: Run tests for inventory-service
      run: docker-compose exec -T inventory-service poetry run pytest tests/

    - name: Run tests for user-service
      run: docker-compose exec -T user-service poetry run pytest tests/

    - name: Run Docker Compose Down Script
      if: always()
      run: ./scripts/docker-compose-down.sh
